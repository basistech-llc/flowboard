worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  900s;

    # Optional noisy logging
    ## log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    ##                   # '$status $body_bytes_sent "$http_referer" '
    ##                   '$status $body_bytes_sent '
    ##                   # '"$http_user_agent" "$http_x_forwarded_for"';
    ##                   '"$http_x_forwarded_for"';
    ##  access_log /dev/stdout main;
    ## error_log /dev/stderr notice;

    server {
        listen       ${FB_NGINX_PORT};
        server_name  localhost flowboard.degel.com crm.basistech.com;

        client_max_body_size 100M;

        rewrite_log on;

        location / {
            proxy_pass http://fb_dashboard:5173;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api {
            # CORS protection
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*'; # [TODO] Lockdown addresses
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type';
                return 204;
            }
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

            proxy_read_timeout 900s;

            # Rewrite /api/ paths and proxy them
            proxy_pass http://fb_backend:${FB_BACKEND_PORT};
            rewrite ^/api/(.*)$ /$1 break;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
